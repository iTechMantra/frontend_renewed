import{B as p}from"./index-ClTdhUSR.js";const f=()=>Math.floor(1e5+Math.random()*9e5).toString(),O=(o,n="login")=>{try{const t=JSON.parse(localStorage.getItem("otps")||"[]").filter(a=>a.phone!==o),e=f(),i=new Date(Date.now()+300*1e3),c={id:p(),phone:o,otp:e,type:n,expiry:i.toISOString(),createdAt:new Date().toISOString()};return t.push(c),localStorage.setItem("otps",JSON.stringify(t)),console.log(`OTP for ${o}: ${e}`),alert(`Demo OTP for ${o}: ${e}

This is a demo - in production, this would be sent via SMS.`),{success:!0,otp:e}}catch(s){return console.error("Error sending OTP:",s),{success:!1,error:"Failed to send OTP"}}},g=(o,n,s="login")=>{try{const t=JSON.parse(localStorage.getItem("otps")||"[]"),e=t.find(r=>r.phone===o&&r.otp===n&&r.type===s);if(!e)return{success:!1,error:"Invalid OTP"};const i=new Date,c=new Date(e.expiry);if(i>c){const r=t.filter(l=>l.id!==e.id);return localStorage.setItem("otps",JSON.stringify(r)),{success:!1,error:"OTP has expired"}}const a=t.filter(r=>r.id!==e.id);return localStorage.setItem("otps",JSON.stringify(a)),{success:!0}}catch(t){return console.error("Error verifying OTP:",t),{success:!1,error:"Failed to verify OTP"}}};export{O as s,g as v};
